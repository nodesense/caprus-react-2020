[{"/home/krish/product-app/src/index.js":"1","/home/krish/product-app/src/app/App.jsx":"2","/home/krish/product-app/src/app/components/Header.jsx":"3","/home/krish/product-app/src/app/components/Footer.jsx":"4","/home/krish/product-app/src/app/components/Counter.jsx":"5","/home/krish/product-app/src/app/components/CartSummary.jsx":"6","/home/krish/product-app/src/app/components/CartList.jsx":"7","/home/krish/product-app/src/app/components/Cart.jsx":"8","/home/krish/product-app/src/app/components/CartItem.jsx":"9","/home/krish/product-app/src/app/components/Checkout.jsx":"10","/home/krish/product-app/src/app/contexts/ThemeContext.js":"11","/home/krish/product-app/src/app/components/FuncCounter.jsx":"12","/home/krish/product-app/src/app/components/FuncCart.js":"13","/home/krish/product-app/src/app/store.js":"14","/home/krish/product-app/src/app/state/middlewares/cacheMiddleware.js":"15","/home/krish/product-app/src/app/components/ReduxCounter.js":"16","/home/krish/product-app/src/app/containers/ReduxCounter.js":"17","/home/krish/product-app/src/app/state/actions/counter.actions.js":"18","/home/krish/product-app/src/app/state/middlewares/index.js":"19","/home/krish/product-app/src/app/state/reducers/counterReducer.js":"20","/home/krish/product-app/src/app/state/action-types.js":"21","/home/krish/product-app/src/app/state/reducers/authReducer.js":"22","/home/krish/product-app/src/app/containers/Header.js":"23","/home/krish/product-app/src/app/state/actions/auth.actions.js":"24","/home/krish/product-app/src/app/components/AdminBlock.jsx":"25","/home/krish/product-app/src/app/containers/AdminBlock.js":"26","/home/krish/product-app/src/app/components/PrivateRoute.jsx":"27","/home/krish/product-app/src/app/components/TextInput.jsx":"28","/home/krish/product-app/src/app/state/services/product.service.js":"29","/home/krish/product-app/src/app/components/ProductList.jsx":"30","/home/krish/product-app/src/app/state/services/core.js":"31","/home/krish/product-app/src/app/state/services/auth.service.js":"32","/home/krish/product-app/src/app/components/FuncProducList.jsx":"33","/home/krish/product-app/src/app/config/index.js":"34","/home/krish/product-app/src/app/components/TextInputFunc.jsx":"35","/home/krish/product-app/src/app/state/reducers/index.js":"36","/home/krish/product-app/src/app/components/Heading.jsx":"37","/home/krish/product-app/src/app/state/middlewares/loggerMiddleware.js":"38","/home/krish/product-app/src/app/components/Titles.jsx":"39"},{"size":607,"mtime":1609419190736,"results":"40","hashOfConfig":"41"},{"size":6488,"mtime":1609936753731,"results":"42","hashOfConfig":"41"},{"size":1957,"mtime":1609936717555,"results":"43","hashOfConfig":"41"},{"size":1831,"mtime":1609248924558,"results":"44","hashOfConfig":"41"},{"size":7149,"mtime":1608809868273,"results":"45","hashOfConfig":"41"},{"size":2835,"mtime":1608815164022,"results":"46","hashOfConfig":"41"},{"size":1959,"mtime":1608815359575,"results":"47","hashOfConfig":"41"},{"size":5194,"mtime":1609853842924,"results":"48","hashOfConfig":"41"},{"size":2360,"mtime":1609156851735,"results":"49","hashOfConfig":"41"},{"size":3188,"mtime":1609941223160,"results":"50","hashOfConfig":"41"},{"size":176,"mtime":1609248863360,"results":"51","hashOfConfig":"41"},{"size":2434,"mtime":1609248734399,"results":"52","hashOfConfig":"41"},{"size":6233,"mtime":1609248902969,"results":"53","hashOfConfig":"41"},{"size":1351,"mtime":1609851204909,"results":"54","hashOfConfig":"41"},{"size":605,"mtime":1609851750508,"results":"55","hashOfConfig":"41"},{"size":1596,"mtime":1609939783491,"results":"56","hashOfConfig":"41"},{"size":3167,"mtime":1609421979503,"results":"57","hashOfConfig":"41"},{"size":395,"mtime":1609417256804,"results":"58","hashOfConfig":"41"},{"size":240,"mtime":1609417882082,"results":"59","hashOfConfig":"41"},{"size":594,"mtime":1609417314741,"results":"60","hashOfConfig":"41"},{"size":277,"mtime":1609847260005,"results":"61","hashOfConfig":"41"},{"size":622,"mtime":1609847514286,"results":"62","hashOfConfig":"41"},{"size":683,"mtime":1609854530695,"results":"63","hashOfConfig":"41"},{"size":1393,"mtime":1609851437950,"results":"64","hashOfConfig":"41"},{"size":340,"mtime":1609853763067,"results":"65","hashOfConfig":"41"},{"size":343,"mtime":1609853715607,"results":"66","hashOfConfig":"41"},{"size":634,"mtime":1609854695824,"results":"67","hashOfConfig":"41"},{"size":1246,"mtime":1609924827916,"results":"68","hashOfConfig":"41"},{"size":484,"mtime":1609935372856,"results":"69","hashOfConfig":"41"},{"size":2589,"mtime":1609941165912,"results":"70","hashOfConfig":"41"},{"size":374,"mtime":1609935684513,"results":"71","hashOfConfig":"41"},{"size":422,"mtime":1609933419983,"results":"72","hashOfConfig":"41"},{"size":2883,"mtime":1609937722822,"results":"73","hashOfConfig":"41"},{"size":190,"mtime":1609933430455,"results":"74","hashOfConfig":"41"},{"size":236,"mtime":1609938490616,"results":"75","hashOfConfig":"41"},{"size":64,"mtime":1609847532922,"results":"76","hashOfConfig":"41"},{"size":285,"mtime":1609939231621,"results":"77","hashOfConfig":"41"},{"size":393,"mtime":1609417582028,"results":"78","hashOfConfig":"41"},{"size":556,"mtime":1609941193452,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"yq61ix",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"89"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/krish/product-app/src/index.js",[],["173","174"],"/home/krish/product-app/src/app/App.jsx",[],["175","176"],"/home/krish/product-app/src/app/components/Header.jsx",["177"],"// Header.jsx\nimport React from 'react';\n\nimport {Link, NavLink} from 'react-router-dom';\nimport AdminBlock from '../containers/AdminBlock';\n\n// to receive the props data from parent\n// props are read only, getter only object,no setters allowed\nconst Header = (props) => {\n    console.log('Header render', props);\n    // we cannot change properties\n    // props.title = \"something but error\"; // error, won't work\n    // destructuring\n    const {title, children, is_authenticated, authActions} = props;\n\n    return (\n        <div>\n            <h2>{title}</h2>\n            {children}\n\n            {/* NavLink has activeClassName to apply different color */}\n            \n            <NavLink exact to=\"/\" className=\"button\" activeClassName=\"success\">Home</NavLink>\n            <NavLink to=\"/products\" className=\"button \" activeClassName=\"success\">Products</NavLink>\n            <NavLink to=\"/cart\" className=\"button\" activeClassName=\"success\">Cart</NavLink>\n            <NavLink to=\"/checkout\" className=\"button\" activeClassName=\"success\">Checkout</NavLink>\n            \n            <NavLink exact to=\"/redux-counter\" className=\"button\" \n                        activeClassName=\"success\">\n                            Redux Counter\n            </NavLink>\n            \n\n            <NavLink exact to=\"/func-products\" className=\"button\" \n                        activeClassName=\"success\">\n                          Func Products Lsit\n            </NavLink>\n            \n\n    {!is_authenticated && <button onClick={ () => authActions.login('admin', 'admin') }> Login </button> }\n    \n    {is_authenticated &&  <button onClick={ () => authActions.logout() } > Logout </button> }\n\n        <AdminBlock>\n            <NavLink exact to=\"/inventory\" className=\"button\" \n                        activeClassName=\"success\">\n                           Inventory\n            </NavLink>\n        </AdminBlock>\n\n            <hr />\n        </div>\n    )\n}\n\nexport default Header;",["178","179"],"/home/krish/product-app/src/app/components/Footer.jsx",[],"/home/krish/product-app/src/app/components/Counter.jsx",[],"/home/krish/product-app/src/app/components/CartSummary.jsx",["180"],"// CartSummary.js\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\n//TODO: PropTypes\n\n// TODO: PureComponent\n class CartSummary extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            discount: 0,\n            grandTotal: 0\n        }\n    }\n \n    //TODO: componentWillMount\n    //TODO: componentWillReceiveProps, recalculate \n \n    //TODO: shouldComponentUpdate\n\n    recalculate(props) {\n        let discount = 0;\n\n        if (props.count >= 10) {\n            discount = 20;\n        } else if (props.count >= 5) {\n            discount = 10;\n        }\n\n        let grandTotal = props.amount - (props.amount * discount / 100);\n\n        this.setState({\n            discount, \n            grandTotal\n        })\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        let discount = 0;\n\n        if (props.count >= 10) {\n            discount = 20;\n        } else if (props.count >= 5) {\n            discount = 10;\n        }\n\n        let grandTotal = props.amount - (props.amount * discount / 100);\n\n        return {\n            discount, \n            grandTotal\n        }\n\n    }\n     \n\n    // is called only on update cycle\n        // when parent render called\n        // when this.setState called\n        // NOT called when we do this.forceUpdate\n    \n    // this function decide wheter render can be called or not\n    // by comparing values of props and state\n    // return true means, the data changed, then render to be called\n    // return false means, no data change, no need to call render\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('Summary shouldComponentUpdate nextProps', nextProps)\n        console.log('Summary shouldComponentUpdate nextState', nextState)\n        console.log('Summary shouldComponentUpdate currentState', this.state)\n        console.log('Summary shouldComponentUpdate currentPRops', this.props)\n        \n        // this works\n        // not scable when we have more properties, state items\n        return nextProps.amount !== this.props.amount ||\n               nextProps.count !== this.props.count ||\n               nextState.discount !== this.state.discount ||\n               nextState.grandTotal !== this.state.grandTotal;\n\n        //return true; // call render\n        //return false; // doesn't call render\n    }\n\n    \n    render() {\n        console.log(\"CartSummary Render\");\n        return (\n            <div> \n            <h2>Cart Summary</h2>\n            <p> Amount : {this.props.amount} </p>\n            <p> Count : {this.props.count} </p>\n\n            <p> Discount: {this.state.discount} %</p>\n            <p> Grand Total: {this.state.grandTotal} </p>\n            </div>\n        )\n    }\n} \n\n\nCartSummary.defaultProps = {\n    \n}\n\nCartSummary.propTypes = {\n    \n}\n\nexport default CartSummary;","/home/krish/product-app/src/app/components/CartList.jsx",["181","182"],"// CartList.js\n\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CartItem from \"./CartItem\";\n\n //TODO: PureComponent\n\n // PureComponent comes with shouldComponentUpdate already implemented\n // it compares next props with this props,\n // it compares next state with this props\n // return true if any change in props or state\n // return false if no change in props or state\n\n class CartList extends PureComponent {\n    constructor(props) {\n        super(props);\n    }\n     \n    //TODO: shouldComponentUpdate\n    \n    render() {\n        console.log(\"CartList Render\");\n\n        let {items, removeItem, updateItem} = this.props;\n\n        return (\n            <div> \n            <h2>Cart List</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Qty</th>\n                        <th>Total</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {/* TODO props items map with CartItem */ }\n\n                    {/*\n                        how to write a loop expression\n                        JSX doesn't accept statement, only accept expressions\n                        and importance of key property/reserved react keyword\n                    */  }\n\n                    {\n                        items.map (item => <CartItem item={item} \n                                                     key={item.id}   \n                                                     removeItem={removeItem}\n                                                     updateItem={updateItem}\n                        \n                        /> )\n                    }\n\n                </tbody>\n            </table>\n            </div>\n        )\n    }\n} \n\nCartList.defaultProps = {\n    \n}\n\nCartList.propTypes = {\n    \n}\n\nexport default CartList;",["183","184"],"/home/krish/product-app/src/app/components/Cart.jsx",["185"],"// Cart.js\n\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CartList from \"./CartList\";\nimport CartSummary from \"./CartSummary\";\nimport AdminBlock from \"../containers/AdminBlock\";\n\nclass Cart extends Component {\n    static defaultProps = {\n    \n    }\n\n    static propTypes = {\n    \n    }\n    \n    constructor(props) {\n        super(props);\n\n        const items = []\n\n        for (let i = 0; i < 1000; i++) {\n            let id = Math.ceil(Math.random() * 10000) + \"-\" + Math.ceil(Math.random() * 566);\n            let item = {\n                id,\n                name: `Product ${id}`,\n                price: Math.ceil(Math.random() * 100),\n                qty: 1\n            }\n\n            items.push(item)\n        }\n\n        this.state = {\n            items,\n            // items: [ \n            // \t\t\t{id: 1, name: 'P1', price: 100, qty: 5}\n            //        ],\n                   \n            amount: 0, // sum of all items price * qty\n            count: 0, // sum of all items qty\n            flag: true\n        }\n    }\n    \n    addItem = () => {\n        let id = Math.ceil(Math.random() * 10000);\n        let item = {\n            id,\n            name: `Product ${id}`,\n            price: Math.ceil(Math.random() * 100),\n            qty: 1\n        }\n\n        //TODO:\n \n        // this.setState({items: [...this.state.items, item]})\n\n        // functional setState example\n        this.setState( (state, props) => {\n           return  {items: [...state.items, item]}\n        })\n\n        // derived state present then, using functional setState is good\n    }\n    \n    // child to parent communication, via function callback\n    // to be invoked by child component when + or - button clicked\n    // parent should pass removeItem function to CartList as props\n    // CartList should pass to CartItem\n    // Then CartItem componetn shall call removeItem  function directly\n    removeItem = (id) => {\n        //TODO: assignment tonight\n        // do not mutate the state, items \n        // immutable item, state\n        console.log('removeItem called', id)\n        this.setState( {\n            // returns all items except the one we need to remove\n            items: this.state.items.filter (item => item.id !== id)\n        })\n    }\n\n    updateItem = (id, qty) => {\n        //TODO: assignment tonight\n        console.log('update item called ', id, qty)\n\n        this.setState( {\n            items: this.state.items.map ( item => item.id === id? {...item, qty}: item )\n        })\n    }\n\n    empty = () => {\n        //TODO\n        this.setState({items: []})    \n    }\n\n\n\n    //dummy\n    refresh = () => {\n        // cause the render to be called, \n        // cause child render also\n        // something which is irrelevant to cart items\n        this.setState({\n            flag: true\n        })\n    }\n\n    // derived data from state\n    recalculate(items) {\n        let count = 0, \n            amount = 0;\n\n        for (let item of items) {\n            amount += item.price * item.qty;\n            count += item.qty;\n        }\n\n        this.setState({\n            amount,\n            count\n        })\n    }\n\n    //TODO:\n    // called before calling render function on update and creation stage\n    // implement business login based on props and state\n    // called whenever parent render, parent rener will cause child render too\n    // retrn a new state if any changes\n    // When we need to do a busines or calculate derived data based on state/props change\n    // this method replaces two old life cycle methods \n            /// componentWillMount(), componentWillReciveProps - deprecated\n    static getDerivedStateFromProps(props, state) {\n        let count = 0, \n            amount = 0;\n\n        for (let item of state.items) {\n            amount += item.price * item.qty;\n            count += item.qty;\n        }\n        \n        // return new state\n\n        return {amount, count}\n    }\n\n\n    gotoCheckout = () => {\n        // write code to move from cart to checkout\n        // js\n    }\n    \n    \n    render() {\n        console.log(\"Cart render\", this.props)\n        return (\n            <div> \n            <h2>Cart</h2>\n\n            <button onClick={this.addItem}>\n                Add Item\n            </button>\n\n\n            <button onClick={this.empty}>\n                Empty\n            </button>\n\n            <button onClick={this.refresh}>\n                Refresh\n            </button>\n            <AdminBlock>\n                 <button > Disable Checkouts </button>\n            </AdminBlock>\n            <button onClick={ () => this.props.history.push(\"/checkout\")}>\n                        Checkout\n            </button>\n            \n            {\n            /* when function is used as props, avoid \n                arrow functions, instead use es.next/bind\n            */\n            }\n            <CartList  items={this.state.items}  \n                       removeItem={this.removeItem}\n                       updateItem={this.updateItem}\n            />\n\n            <CartSummary amount={this.state.amount}\n                         count = {this.state.count}\n            />\n\n            </div>\n        )\n    }\n} \n\n\n\n\nexport default Cart;","/home/krish/product-app/src/app/components/CartItem.jsx",["186","187"],"// CartItem.js\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport ThemeContext from \"../contexts/ThemeContext\";\n\nclass CartItem extends PureComponent {\n\n    // to consume context in class component\n    // consume at max only one context this way\n    // for more contexts? user Consumer\n    static contextType = ThemeContext\n\n    // CREATION/MOUNTUNG STAGE : Lifecycle, called only once per instance\n    constructor(props) {\n        super(props);\n    }\n\n   \n    // CALLED ONCE during CREATION/MOUNTING\n    // CALLED on UPDATE CYCLE setState, forceUpdate, parent render\n    render() {\n        let {item, updateItem, removeItem} = this.props;\n\n        console.log(\"CartItem Render \", item.id);\n\n        return (\n            <tr>\n                <td>{item.name} </td>\n                <td>{item.price}</td>\n                <td>{item.qty}</td>\n                <td>{item.price * item.qty}</td>\n                <td> \n                    {/* calling CartItem updateItem, removeItem */}\n                <button onClick={() => updateItem(item.id, item.qty + 1) }>\n                        +1\n                </button>    \n\n                <button onClick={ () => updateItem(item.id, item.qty - 1) }>\n                        -1\n                </button>    \n\n                <button onClick={ () => removeItem(item.id) }>\n                        X - {this.context.scheme}\n                </button>\n                </td>\n            </tr>\n        )\n    }\n\n\n\n    // Called during CREATION stage only once after render\n    // V.doms are mounted into real dom, refs are ready, access to dom possible here\n    // start/set the timer\n    // make api call\n    // susbcribe\n    componentDidMount() {\n        console.log(\"CART ITEM, componentDidMount\")\n    }\n\n    // called during update stage after the render function\n    // v.dom are mounted into real dom during update cycle\n    // useful for DOM access, access to ref\n    componentDidUpdate() {\n        console.log(\"CART ITEM, componentDidUpdate\")\n    }\n\n    // called during unmount\n    // removing compoentn from memory\n    // useful for clearing resources, stop susbcribption, clear timer\n    // only once\n    componentWillUnmount() {\n        console.log('CARTITEM componentWillUnmount')\n    }\n} \n\n\nCartItem.defaultProps = {\n    \n}\n\nCartItem.propTypes = {\n    \n}\n\nexport default CartItem;","/home/krish/product-app/src/app/components/Checkout.jsx",[],"/home/krish/product-app/src/app/contexts/ThemeContext.js",[],"/home/krish/product-app/src/app/components/FuncCounter.jsx",[],"/home/krish/product-app/src/app/components/FuncCart.js",["188"],"import React, {useReducer, useState, useMemo, useContext} from 'react';\nimport ThemeContext from '../contexts/ThemeContext';\n\nconst INITIAL_STATE = {\n    items: [],\n    count: 0,\n    amount: 0\n}\n\nfunction calculate(items) {\n    let a = 0, c = 0;\n    for (let item of items) {\n        a += item.qty * item.price\n        c += item.qty\n    }\n\n    return {\n        items,\n        count: c,\n        amount: a\n    }\n}\n\n// pure component\nconst cartReducer = (state, action) => {\n    switch(action.type) {\n        case 'addItem': {\n                // action = { type: 'addItem', item : {id:, name, price, qty}}\n        \n            const items = [...state.items, action.item]\n            \n            // retrn new state\n            return calculate(items)\n        }\n        case 'removeItem': {\n                // action, {type: removeItem, id: 12}\n                const items = state.items.filter (item => item.id != action.id)\n\n                // retrn new state\n                return calculate(items)\n        }\n        case 'updateItem': {\n                // action, {type: updateItem, id: 12, qty: 2}\n                const items = state.items.map (item => item.id === action.id?\n                                                       {...item, qty: action.qty}\n                                                       : item)\n\n               return calculate(items)\n        }\n        case 'reset': {\n            // action, {type: reset},\n            return INITIAL_STATE;\n        }\n\n        default: return state;\n    }\n}\n\nfunction calcGrandTotal(amount, count) {\n    console.log('calc calcGrandTotal Expensive call ', amount, count)\n    let discount = 0;\n\n    if (count >= 10) {\n        discount = 20;\n    } else if (count >= 5) {\n        discount = 10;\n    }\n\n    let grandTotal = amount - (amount * discount / 100);\n\n    return {\n        discount, \n        grandTotal\n    }\n}\n\nconst FuncCart = () => {\n\n    const theme = useContext(ThemeContext);\n\n    // cartState  { items: [], amount, count }\n    // dispatch is a function that will invoke the reducer with action\n    // reducer (state, action)\n    // dispatch(action) ==> call reducer(state from react/closure, action from dispatch)\n    const [cartState, dispatch] = useReducer(cartReducer, INITIAL_STATE)\n\n    const { items, amount, count } = cartState;\n\n    // expensive calls, calls calcGrandTotal again and again for same args\n    //const {discount, \n    //    grandTotal} = calcGrandTotal(amount, count)\n\n\n    const {discount, \n        grandTotal} = useMemo( () => calcGrandTotal(amount, count), \n                                        [amount, count])\n\n \n    const [flag, setFlag] = useState(true)\n\n    return (\n        <div>\n            <h2>Cart</h2>\n\n            <button onClick={ () => setFlag(!flag)}>Flag</button>\n\n            <button onClick={ () => {\n                         const id = Math.ceil(Math.random() * 10000);\n                         const item = {\n                             id,\n                             name: `Product ${id}`,\n                             price: Math.ceil(Math.random() * 100),\n                             qty: 1\n                         }\n\n                         const action = {\n                             type: 'addItem',\n                             item\n                         } \n\n                        // calls reducer\n                        // re-render v.dom\n                         dispatch(action)\n                } }>\n                Add Item\n            </button>\n\n\n            <button onClick={ () => {\n                dispatch({type: 'reset'})\n            } }>\n                Empty\n            </button>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Qty</th>\n                        <th>Total</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        items.map ( item => (\n                            <tr key={item.id}>\n                                    <td>{item.name} </td>\n                                    <td>{item.price}</td>\n                                    <td>{item.qty}</td>\n                                    <td>{item.price * item.qty}</td>\n                                    <td> \n                                        {/* calling CartItem updateItem, removeItem */}\n                                    <button onClick={() => {\n                                        const action = {type: 'updateItem',\n                                                        qty: item.qty + 1,\n                                                        id: item.id\n                                                    }\n\n                                        dispatch(action)\n                                    }  }>\n                                            +1\n                                    </button>    \n\n                                    <button onClick={ () => {\n                                         const action = {type: 'updateItem',\n                                         qty: item.qty - 1,\n                                         id: item.id\n                                        }\n\n                                         dispatch(action)\n                                    } }>\n                                            -1\n                                    </button>    \n\n                                    <button onClick={ () => {\n                                        const action = {type: 'removeItem',\n                                        id: item.id}\n\n                                        dispatch(action)\n                                    }}>\n                                    X - {theme.scheme}\n                                    </button>\n                                    </td>\n                                </tr>\n                        ))\n                    }\n\n\n                </tbody>\n        </table>\n\n        <p> Amount {amount}</p>\n        <p>Count {count} </p>\n\n        <p> Discount {discount}</p>\n        <p>Grand total  {grandTotal} </p>\n\n        </div>\n    )\n}\n\nexport default FuncCart;","/home/krish/product-app/src/app/store.js",[],"/home/krish/product-app/src/app/state/middlewares/cacheMiddleware.js",["189"],"\n// es6 styled middled\n\nimport { LOGOUT } from \"../action-types\";\n\nexport const cacheMiddleware = ({dispatch, getState}) => next => action => {\n    console.log('cacheMiddleware called')\n    const result = next(action);\n\n    if (typeof action === 'object' && action.type.indexOf('Counter') >= 0) {\n        // only for counter increment/reset/decrement\n        const state =  getState()\n        window.localStorage.setItem(\"Counter\", state.counter)\n    }\n\n    if (typeof action == 'object' && action.type== LOGOUT) {\n        window.localStorage.clear(); // remove user and token\n    }\n\n    return result;\n}\n","/home/krish/product-app/src/app/components/ReduxCounter.js",["190"],"/home/krish/product-app/src/app/containers/ReduxCounter.js",[],"/home/krish/product-app/src/app/state/actions/counter.actions.js",[],"/home/krish/product-app/src/app/state/middlewares/index.js",[],"/home/krish/product-app/src/app/state/reducers/counterReducer.js",[],"/home/krish/product-app/src/app/state/action-types.js",[],"/home/krish/product-app/src/app/state/reducers/authReducer.js",[],"/home/krish/product-app/src/app/containers/Header.js",[],"/home/krish/product-app/src/app/state/actions/auth.actions.js",[],"/home/krish/product-app/src/app/components/AdminBlock.jsx",[],"/home/krish/product-app/src/app/containers/AdminBlock.js",[],"/home/krish/product-app/src/app/components/PrivateRoute.jsx",[],"/home/krish/product-app/src/app/components/TextInput.jsx",["191"],"import React from 'react';\n\nclass TextInput extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            value: props.value\n        }\n    }\n    \n    // static getDerivedStateFromProps(props, state ) {\n    //     return {\n    //         value: props.value\n    //     }\n    // }\n\n    handleChange = (e) => {\n        const {name, value} = e.target; // target is real dom input,select, checkbox \n        //console.log(name, value)\n        // take value from control, update the state,\n        // this cause re-render, then v.dom updated with value from state\n        this.setState({value})\n    }\n\n    onBlur = () => {\n        const event = {\n            target: {name: this.props.name, value: this.state.value}\n        }\n        this.props.onChange && this.props.onChange(event)\n    }\n\n    render() {\n        //onChange shall be ignored here\n        const {onChange, ...props} = this.props;\n        console.log('TextInput render ', this.props);\n\n        return (\n            <input {...props}\n                    value = {this.state.value}\n                    onChange={this.handleChange} \n                    onBlur={this.onBlur}\n            />\n        )\n    }\n}\n\nexport default TextInput;","/home/krish/product-app/src/app/state/services/product.service.js",["192"],"import config from '../../config';\n\nimport {getJson, postJson} from './core';\n\nexport const getProductsES6 = () => {\n    return getJson(`${config.API_END_POINT}/api/products`)\n           .then (response => response.data)\n}\n\n// ES7 await and async\n// cleaner code\nexport const getProducts = async (options = {}) => {\n    try  {\n        const response = await getJson(`${config.API_END_POINT}/delayed/api/products`, options);\n        return response.data;\n    }\n    catch(ex) {\n\n    }\n}","/home/krish/product-app/src/app/components/ProductList.jsx",["193"],"/home/krish/product-app/src/app/state/services/core.js",[],"/home/krish/product-app/src/app/state/services/auth.service.js",["194"],"/home/krish/product-app/src/app/components/FuncProducList.jsx",["195","196"],"import React from 'react';\nimport axios from 'axios';\nimport { getProducts } from '../state/services/product.service';\n\nimport {useState, useEffect} from 'react';\n\nconst FuncProductList = (props) => {\n    const [products, setProducts] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    useEffect( () => {\n        let cancel = undefined\n        console.log('fetching data')\n        setLoading(true)\n        axios('http://localhost:7070/delayed/api/products', {\n            cancelToken: new axios.CancelToken((c => cancel = c))\n        })\n        .then (response => {\n            console.log('got response', response)\n            return response.data\n        } )\n        .then (products => {\n            console.log('got data ', products)\n            setProducts(products)\n            setLoading(false)\n        })\n\n\n        return () => {\n            console.log(\"component will be destroyed\")\n            cancel && cancel();\n        }\n    }, [])\n\n\n    useEffect( () => {\n        let cancel = undefined\n        let handle =   setInterval( () => {\n            console.log('fetching data on interval')\n            setLoading(true)\n            axios('http://localhost:7070/delayed/api/products', {\n                cancelToken: new axios.CancelToken((c => cancel = c))\n            })\n            .then (response => {\n                console.log('got response', response)\n                return response.data\n            } )\n            .then (products => {\n                console.log('got data ', products)\n                setProducts(products)\n                setLoading(false)\n            })\n        }, 60 * 1000);\n        \n\n        return () => {\n            console.log(\"component will be destroyed\")\n            cancel && cancel();\n            clearInterval(handle)\n            handle = undefined\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n                <div>\n                    <h2 > Func Product List</h2>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Price</th>\n                                <th>Year</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                products.map (product => (\n                                    <tr key={product.id}>\n                                        <td>{product.name}</td>\n                                        <td>{product.price}</td>\n                                        <td>{product.year}</td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n    );\n\n}\n \nexport default FuncProductList;","/home/krish/product-app/src/app/config/index.js",[],"/home/krish/product-app/src/app/components/TextInputFunc.jsx",["197","198"],"import React, {forwardRef, useState} from 'react';\n\nconst TextinputFunc = React.forwardRef((props, ref) => (\n    <div>\n    <label>Enter data</label>\n    <input {...props} ref={ref} />\n    </div>\n  ));\n\n \n\n  export default TextinputFunc;","/home/krish/product-app/src/app/state/reducers/index.js",[],"/home/krish/product-app/src/app/components/Heading.jsx",[],"/home/krish/product-app/src/app/state/middlewares/loggerMiddleware.js",[],"/home/krish/product-app/src/app/components/Titles.jsx",["199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"200","replacedBy":"204"},{"ruleId":"202","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":4,"column":9,"nodeType":"208","messageId":"209","endLine":4,"endColumn":13},{"ruleId":"200","replacedBy":"210"},{"ruleId":"202","replacedBy":"211"},{"ruleId":"206","severity":1,"message":"212","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":17},{"ruleId":"206","severity":1,"message":"212","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":17,"column":5,"nodeType":"215","messageId":"216","endLine":19,"endColumn":6},{"ruleId":"200","replacedBy":"217"},{"ruleId":"202","replacedBy":"218"},{"ruleId":"206","severity":1,"message":"212","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"206","severity":1,"message":"212","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":14,"column":5,"nodeType":"215","messageId":"216","endLine":16,"endColumn":6},{"ruleId":"219","severity":1,"message":"220","line":37,"column":67,"nodeType":"221","messageId":"222","endLine":37,"endColumn":69},{"ruleId":"219","severity":1,"message":"223","line":16,"column":49,"nodeType":"221","messageId":"222","endLine":16,"endColumn":51},{"ruleId":"206","severity":1,"message":"224","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":19},{"ruleId":"206","severity":1,"message":"225","line":19,"column":16,"nodeType":"208","messageId":"209","endLine":19,"endColumn":20},{"ruleId":"206","severity":1,"message":"226","line":3,"column":18,"nodeType":"208","messageId":"209","endLine":3,"endColumn":26},{"ruleId":"206","severity":1,"message":"227","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"206","severity":1,"message":"228","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"227","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"229","line":9,"column":12,"nodeType":"208","messageId":"209","endLine":9,"endColumn":19},{"ruleId":"206","severity":1,"message":"230","line":1,"column":16,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"231","line":1,"column":28,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"232","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],["233"],["234"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["233"],["234"],"'PropTypes' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["233"],["234"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'INCREMENT' is defined but never used.","'name' is assigned a value but never used.","'postJson' is defined but never used.","'getProducts' is defined but never used.","'getJson' is defined but never used.","'loading' is assigned a value but never used.","'forwardRef' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]