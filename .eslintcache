[{"/home/krish/product-app/src/index.js":"1","/home/krish/product-app/src/app/App.jsx":"2","/home/krish/product-app/src/app/components/Header.jsx":"3","/home/krish/product-app/src/app/components/Footer.jsx":"4","/home/krish/product-app/src/app/components/Counter.jsx":"5","/home/krish/product-app/src/app/components/CartSummary.jsx":"6","/home/krish/product-app/src/app/components/CartList.jsx":"7","/home/krish/product-app/src/app/components/Cart.jsx":"8","/home/krish/product-app/src/app/components/CartItem.jsx":"9","/home/krish/product-app/src/app/components/Checkout.jsx":"10","/home/krish/product-app/src/app/contexts/ThemeContext.js":"11"},{"size":337,"mtime":1608727694233,"results":"12","hashOfConfig":"13"},{"size":3657,"mtime":1609160036776,"results":"14","hashOfConfig":"13"},{"size":1072,"mtime":1609160605192,"results":"15","hashOfConfig":"13"},{"size":1497,"mtime":1609157113750,"results":"16","hashOfConfig":"13"},{"size":7149,"mtime":1608809868273,"results":"17","hashOfConfig":"13"},{"size":2835,"mtime":1608815164022,"results":"18","hashOfConfig":"13"},{"size":1959,"mtime":1608815359575,"results":"19","hashOfConfig":"13"},{"size":4793,"mtime":1608816134831,"results":"20","hashOfConfig":"13"},{"size":2360,"mtime":1609156851735,"results":"21","hashOfConfig":"13"},{"size":2044,"mtime":1608818175600,"results":"22","hashOfConfig":"13"},{"size":176,"mtime":1609156475564,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"yq61ix",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/krish/product-app/src/index.js",[],["52","53"],"/home/krish/product-app/src/app/App.jsx",[],"/home/krish/product-app/src/app/components/Header.jsx",[],"/home/krish/product-app/src/app/components/Footer.jsx",[],["54","55"],"/home/krish/product-app/src/app/components/Counter.jsx",[],"/home/krish/product-app/src/app/components/CartSummary.jsx",["56"],"// CartSummary.js\nimport React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\n//TODO: PropTypes\n\n// TODO: PureComponent\n class CartSummary extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            discount: 0,\n            grandTotal: 0\n        }\n    }\n \n    //TODO: componentWillMount\n    //TODO: componentWillReceiveProps, recalculate \n \n    //TODO: shouldComponentUpdate\n\n    recalculate(props) {\n        let discount = 0;\n\n        if (props.count >= 10) {\n            discount = 20;\n        } else if (props.count >= 5) {\n            discount = 10;\n        }\n\n        let grandTotal = props.amount - (props.amount * discount / 100);\n\n        this.setState({\n            discount, \n            grandTotal\n        })\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        let discount = 0;\n\n        if (props.count >= 10) {\n            discount = 20;\n        } else if (props.count >= 5) {\n            discount = 10;\n        }\n\n        let grandTotal = props.amount - (props.amount * discount / 100);\n\n        return {\n            discount, \n            grandTotal\n        }\n\n    }\n     \n\n    // is called only on update cycle\n        // when parent render called\n        // when this.setState called\n        // NOT called when we do this.forceUpdate\n    \n    // this function decide wheter render can be called or not\n    // by comparing values of props and state\n    // return true means, the data changed, then render to be called\n    // return false means, no data change, no need to call render\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('Summary shouldComponentUpdate nextProps', nextProps)\n        console.log('Summary shouldComponentUpdate nextState', nextState)\n        console.log('Summary shouldComponentUpdate currentState', this.state)\n        console.log('Summary shouldComponentUpdate currentPRops', this.props)\n        \n        // this works\n        // not scable when we have more properties, state items\n        return nextProps.amount !== this.props.amount ||\n               nextProps.count !== this.props.count ||\n               nextState.discount !== this.state.discount ||\n               nextState.grandTotal !== this.state.grandTotal;\n\n        //return true; // call render\n        //return false; // doesn't call render\n    }\n\n    \n    render() {\n        console.log(\"CartSummary Render\");\n        return (\n            <div> \n            <h2>Cart Summary</h2>\n            <p> Amount : {this.props.amount} </p>\n            <p> Count : {this.props.count} </p>\n\n            <p> Discount: {this.state.discount} %</p>\n            <p> Grand Total: {this.state.grandTotal} </p>\n            </div>\n        )\n    }\n} \n\n\nCartSummary.defaultProps = {\n    \n}\n\nCartSummary.propTypes = {\n    \n}\n\nexport default CartSummary;","/home/krish/product-app/src/app/components/CartList.jsx",["57","58"],"// CartList.js\n\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CartItem from \"./CartItem\";\n\n //TODO: PureComponent\n\n // PureComponent comes with shouldComponentUpdate already implemented\n // it compares next props with this props,\n // it compares next state with this props\n // return true if any change in props or state\n // return false if no change in props or state\n\n class CartList extends PureComponent {\n    constructor(props) {\n        super(props);\n    }\n     \n    //TODO: shouldComponentUpdate\n    \n    render() {\n        console.log(\"CartList Render\");\n\n        let {items, removeItem, updateItem} = this.props;\n\n        return (\n            <div> \n            <h2>Cart List</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Qty</th>\n                        <th>Total</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {/* TODO props items map with CartItem */ }\n\n                    {/*\n                        how to write a loop expression\n                        JSX doesn't accept statement, only accept expressions\n                        and importance of key property/reserved react keyword\n                    */  }\n\n                    {\n                        items.map (item => <CartItem item={item} \n                                                     key={item.id}   \n                                                     removeItem={removeItem}\n                                                     updateItem={updateItem}\n                        \n                        /> )\n                    }\n\n                </tbody>\n            </table>\n            </div>\n        )\n    }\n} \n\nCartList.defaultProps = {\n    \n}\n\nCartList.propTypes = {\n    \n}\n\nexport default CartList;",["59","60"],"/home/krish/product-app/src/app/components/Cart.jsx",["61"],"/home/krish/product-app/src/app/components/CartItem.jsx",["62","63"],"// CartItem.js\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\nimport ThemeContext from \"../contexts/ThemeContext\";\n\nclass CartItem extends PureComponent {\n\n    // to consume context in class component\n    // consume at max only one context this way\n    // for more contexts? user Consumer\n    static contextType = ThemeContext\n\n    // CREATION/MOUNTUNG STAGE : Lifecycle, called only once per instance\n    constructor(props) {\n        super(props);\n    }\n\n   \n    // CALLED ONCE during CREATION/MOUNTING\n    // CALLED on UPDATE CYCLE setState, forceUpdate, parent render\n    render() {\n        let {item, updateItem, removeItem} = this.props;\n\n        console.log(\"CartItem Render \", item.id);\n\n        return (\n            <tr>\n                <td>{item.name} </td>\n                <td>{item.price}</td>\n                <td>{item.qty}</td>\n                <td>{item.price * item.qty}</td>\n                <td> \n                    {/* calling CartItem updateItem, removeItem */}\n                <button onClick={() => updateItem(item.id, item.qty + 1) }>\n                        +1\n                </button>    \n\n                <button onClick={ () => updateItem(item.id, item.qty - 1) }>\n                        -1\n                </button>    \n\n                <button onClick={ () => removeItem(item.id) }>\n                        X - {this.context.scheme}\n                </button>\n                </td>\n            </tr>\n        )\n    }\n\n\n\n    // Called during CREATION stage only once after render\n    // V.doms are mounted into real dom, refs are ready, access to dom possible here\n    // start/set the timer\n    // make api call\n    // susbcribe\n    componentDidMount() {\n        console.log(\"CART ITEM, componentDidMount\")\n    }\n\n    // called during update stage after the render function\n    // v.dom are mounted into real dom during update cycle\n    // useful for DOM access, access to ref\n    componentDidUpdate() {\n        console.log(\"CART ITEM, componentDidUpdate\")\n    }\n\n    // called during unmount\n    // removing compoentn from memory\n    // useful for clearing resources, stop susbcribption, clear timer\n    // only once\n    componentWillUnmount() {\n        console.log('CARTITEM componentWillUnmount')\n    }\n} \n\n\nCartItem.defaultProps = {\n    \n}\n\nCartItem.propTypes = {\n    \n}\n\nexport default CartItem;","/home/krish/product-app/src/app/components/Checkout.jsx",[],"/home/krish/product-app/src/app/contexts/ThemeContext.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":17,"column":5,"nodeType":"76","messageId":"77","endLine":19,"endColumn":6},{"ruleId":"64","replacedBy":"78"},{"ruleId":"66","replacedBy":"79"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":14,"column":5,"nodeType":"76","messageId":"77","endLine":16,"endColumn":6},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["80"],["81"],"no-global-assign","no-unsafe-negation"]